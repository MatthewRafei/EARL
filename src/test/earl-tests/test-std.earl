import "../../std/list.earl"
import "../../std/math.earl"
import "../../std/utils.earl"
import "../../std/stack.earl"
import "../../std/tree.earl"

mod TestStd

fn test_tree1() {
    print("test_tree1");

    let t = Tree.T();

    t.insert(9);
    t.insert(4);
    t.insert(5);
    t.insert(2);
    t.insert(1);

    assert(t.contains(9));
    assert(t.contains(4));
    assert(t.contains(5));
    assert(t.contains(2));
    assert(t.contains(1));

    print("ok");
}

fn test_class_wmodule_bug() {
    print("test_class_wmodule_bug...");

    let s = Stack.T(List.from_range(0, 9, 1));
    let t = 9;

    while s.empty() != false {
        assert(s.top() == t);
        s.pop();
        t = t-1;
    }

    print("ok");
}

fn test_stack() {
    print("test_stack...");

    let s = Stack.T([]);
    for i in 0..10 {
        s.push(i);
    }

    let t = 9;
    while s.empty() != false {
        assert(s.top() == t);
        s.pop();
        t = t-1;
    }

    print("ok");
}

fn test_list_count() {
    print("test_list_count...");
    let lst = [1,1,1,5,1,4,3,1];
    assert(List.count(lst, 1) == 5);
    print("ok");
}

fn test_list_find() {
    print("test_list_find...");
    let lst = [1,2,3,4,5];
    assert(List.find(lst, 3) == 2);
    let idx = List.find(["hello", "world", "!"], "world");
    assert(idx == 1);
    print("ok");
}

fn test_list_sum() {
    print("test_list_sum...");
    let lst = [1,2,3,4,5];
    assert(List.sum(lst) == 15);
    assert(List.sum([1]) == 1);
    print("ok");
}

fn test_list_fill() {
    print("test_fill...");

    let lst = [0,0,0,0,0];
    List.fill(lst, 10);

    for i in 0..len(lst) {
        assert(lst[i] == 10);
    }

    print("ok");
}

fn test_list_range() {
    print("test_range...");

    let lst = List.from_range(0, 5, 1);

    assert(lst == [0,1,2,3,4,5]);
    assert(List.from_range(10, 15, 1)[0] == 10);

    print("ok");
}

@pub
fn test_std() {
    print("--- testing the stdlib ---");
    test_list_range();
    test_list_fill();
    test_list_sum();
    test_list_find();
    test_list_count();
    test_stack();
    test_class_wmodule_bug();
    # test_tree1();
}

