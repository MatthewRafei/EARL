module Main

import "std/io.earl"
import "std/basic-lexer.earl"

fn parse(@const @ref lexer) {
    let cur = lexer.next();
    while cur {
        if lexer.sz() >= 4
        && cur.unwrap().ty == BasicLexer::TokenType.Hash
        && lexer.peek(0).unwrap().ty == BasicLexer::TokenType.Hash
        && lexer.peek(1).unwrap().ty == BasicLexer::TokenType.Hash {
            let _, _, kw = (lexer.next(), lexer.next(), lexer.next().unwrap());
            if kw.ty != BasicLexer::TokenType.Keyword {
                panic("Token: " + kw.lx + " of type: ", kw.ty, " is not a keyword");
            }
        }
        cur = lexer.next();
    }
}

fn main() {
    let fp = "../std/os.earl";
    let src = IO::file_to_str(fp);

    let keywords = (
        "BEGIN",
        "MODULE",
        "NAME",
        "PARAMETER",
        "RETURNS",
        "DESCRIPTION",
    );
    let lexer = BasicLexer::T(keywords);

    lexer.lex(src, fp);
    parse(lexer);
}

main();
