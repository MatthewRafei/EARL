mod List

@pub
fn range(start, stop, stride) {
    assert(stride != 0);

    let lst = [];
    let i = start;

    while i <= stop {
        lst.append(i);
        i = i+stride;
    }

    return lst;
}

@pub
fn fill(@ref lst, k) {
    for i in 0..len(lst) {
        lst[i] = k;
    }
}

@pub
fn sum(@ref lst) {
    let s = 0;
    for i in 0..len(lst) {
        s = s + lst[i];
    }
    return s;
}

@pub
fn find(@ref lst, @ref elem) {
    let i = 0;
    while i < len(lst) {
        if elem == lst[i] {
            return i;
        }
        i = i+1;
    }
    return 0-1;
}

@pub
fn count(@ref lst, @ref elem) {
    let c = 0;
    for i in 0..len(lst) {
        if elem == lst[i] {
            c = c+1;
        }
    }
    return c;
}
