#+TITLE: EARL
#+DESCRIPTION: Introduction to EARL.
#+AUTHOR: Zachary Haskins (malloc-nbytes)
#+EMAIL: zdhdev@yahoo.com

# Theme from: https://github.com/fniessen/org-html-themes
#+SETUPFILE: https://fniessen.github.io/org-html-themes/org/theme-bigblow.setup

*NOTE*: *This language is still in the infant stage and it is _NOT_ recommended to use in any real or professional capacity.*

*NOTE*: As of now, the only supported platforms are Linux and MacOS.

*NOTE*: Do not modify the README.html as it is auto generated from README.org by [[https://orgmode.org/][Emacs Org Mode]].

*NOTE*: Open =README.html= in a browser to view this document in a much better format.

[[./imgs/earl-logo-resized.jpg]]

* Introduction

#+begin_quote
EARL (Evaluate And Run Language) is being designed to be functionally similar to Python but is gradually typed and has C style syntax.
#+end_quote

For the manual on how to use the language, see [[./EARL-language-reference.html][Click here for the EARL Language Reference]].

* Compiling

We have moved from =autotools= to [[https://cmake.org/][cmake]], so the new required tools are:
1. =c++17=
2. =cmake= (at least v3.25.1)
3. =doxygen= (optional) (for EARL source code documentation)

Users compiling for the first time should do

#+begin_src bash
    cd EARL
    mkdir build
    cd build
    cmake -S ../ -B .
#+end_src

*Note*: You can also supply a =prefix= option to changed the default installation location (=/usr/local=) by using =-DINSTALL_PREFIX=<prefix>=

This will create the Makefile. Use =make <opt>= where =<opt>= is one of,

#+begin_quote
- =make= \rightarrow builds the project
- =make clean= \rightarrow cleans the project
- =make test= \rightarrow build the project and runs tests (stdlib *must* be installed, see [[Installation][Installation]])
- =make docs= \rightarrow generate the documentation (*[[https://doxygen.nl/][Doxygen]] is required*)
#+end_quote

* Installation
Once the configuration step in [[Compiling][Compiling]] is done, use the following to install EARL as well as the stdlib.

#+begin_src bash
  cd build
  make
  sudo make install
  make test
#+end_src

To uninstall, simply do =sudo make uninstall=.

* Syntax Highlighting

Syntax highlighting for Emacs, Vim, and VSCode and can be installed by [[https://github.com/malloc-nbytes/EARL-language-support][clicking here]].

* Contributing

** Style Guide

*** Functions

- Functions should be formatted as such:

#+begin_example
<return type>
<name>(<params>) {
  body...
}
#+end_example

- All indents should be 4 spaces and do not use tabs.
- Macros should be in CAPS. The only exception is for when you want to treat a macro as a function.
- Always put a comment after =#endif= with what it is ending.

*** Structs

#+begin_example
struct <NameOfStruct> {
  ...
}
#+end_example

- All struct names must use pascal case =<NameOfStruct>=.

*** Misc

- All =if=, =for=, =while= etc. should have brackets (the left bracket should be on the same line as the statement).
  While not required, if a conditional/loop only has one statement, you can ommit the brackets. Just make sure it
  is on a different line.
- =+=, =-=, =*=, =/=, etc. does not need whitespace, but == should.
- Lines have a soft limit of 85 characters.
- =typedef='d types should have =_t= appended to it.
  Example:

#+begin_example
typedef int my_type_t;
#+end_example

- All variable, function, and macro names should be =snake_case=.
- All file names have a hyphen ('-') to separate words.
- *Remove unnecessary trailing whitespace*.
- *Disable auto-formatters* (unless it conforms with the C default style of BSD).

* Documentation

** EARL Language Reference

[[./EARL-language-reference.html][Click here for the EARL Language Reference]]

** Autogenerated Development Docs

EARL uses [[https://doxygen.nl/][Doxygen]] to auto generate documentation for the source code of EARL.

All header files should have doxygen comments explaining what is necessary. Do not put
any in =.cpp= files (unless there is no related header for it).

Please read the [[https://www.doxygen.nl/manual/][Doxygen documentation]] (or at least what is relevant) before documenting the code. At the very least,
refer to other files and follow the current way Doxygen comments are written.

If new directories are created and the files need documentation,
edit =EARL/src/Doxyfile= under the =Configuration options related to the input files=,
the =INPUT= switch by adding the directory(s) and file(s) that are needed.

To see the documentation, run =make docs= or =make all= and open =EARL/docs/html/index.html= in a browser.

Click the below link to view the autogenerated documentation after =make docs= has been ran.

[[./docs/html/index.html][EARL Development Documentation]]

